# networks:
#   altinntestlocal_network:
#     external: false

services:
  localtest_loadbalancer:
    container_name: altinn-localtest-loadbalancer
    image: altinn-localtest-loadbalancer:latest
    build:
      context: ./services/app-localtest/loadbalancer
      args:
        NGINX_VERSION: 1.25.3
    restart: always
    # networks:
    #   - altinntestlocal_network
    ports:
      - "${ALTINN3LOCAL_PORT:-80}:80"
    expose:
      - "${ALTINN3LOCAL_PORT:-80}:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - TEST_DOMAIN=${TEST_DOMAIN:-local.altinn.cloud}
      - HOST_DOMAIN=host.docker.internal
      - INTERNAL_DOMAIN=host.docker.internal
      - ALTINN3LOCAL_PORT=${ALTINN3LOCAL_PORT:-80}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.conf
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./services/app-localtest/loadbalancer/templates:/etc/nginx/templates/:ro
      - ./services/app-localtest/loadbalancer/www:/www/:ro

  altinn_localtest:
      container_name: altinn_localtest
      image: altinn_localtest:latest
      restart: always
      # networks:
      #   - altinntestlocal_network
      ports:
        - "5101:5101"
      expose:
        - "5101:5101"
      build:
        context: ./services/app-localtest
      environment:
        - DOTNET_ENVIRONMENT=Docker
        - ASPNETCORE_URLS=http://*:5101/
        - GeneralSettings__BaseUrl=http://${TEST_DOMAIN:-local.altinn.cloud}:${ALTINN3LOCAL_PORT:-80}
        - GeneralSettings__HostName=${TEST_DOMAIN:-local.altinn.cloud}

      volumes:
        - ./services/app-localtest/testdata:/testdata
        - ./testdata/authorization/roles/User_1337/party_501337/roles.json:/testdata/authorization/roles/User_1337/party_501337/roles.json
        - ./testdata/authorization/roles/User_12345/party_512345/roles.json:/testdata/authorization/roles/User_12345/party_512345/roles.json

      extra_hosts:
        - "host.docker.internal:host-gateway"

  oed-db:
    build: ./services/oed/local/db
    user: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    restart: always
    healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 1s
          timeout: 5s
          retries: 10
    # networks:
    #   - altinntestlocal_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  oed:
    build: ./services/oed
    depends_on:
      oed-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Server=oed-db;Username=oedpguser;Database=oed;Port=5432;Password=secret;SSLMode=Prefer
      - AppSettings__OpenIdWellKnownEndpoint=http://altinn_localtest:5101/authentication/api/v1/openid/
      - PlatformSettings__ApiStorageEndpoint=http://altinn_localtest:5101/storage/api/v1/
      - PlatformSettings__ApiRegisterEndpoint=http://altinn_localtest:5101/register/api/v1/
      - PlatformSettings__ApiProfileEndpoint=http://altinn_localtest:5101/profile/api/v1/
      - PlatformSettings__ApiAuthenticationEndpoint=http://altinn_localtest:5101/authentication/api/v1/
      - PlatformSettings__ApiAuthorizationEndpoint=http://altinn_localtest:5101/authorization/api/v1/
      - OedConfig__Archive__Host=http://altinn_localtest:5101
      - LOCALTEST_TOKEN_ENDPOINT=http://altinn_localtest:5101

    restart: always
    ports: 
      - "5005:5005"
    expose:
      - "5005:5005"
    volumes:
      - ./services/oed/app/config/authorization/policy.xml:/app/config/authorization/policy.xml

    # networks:
    #   - altinntestlocal_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # oed-declaration:
  #   build: ./services/oed-declaration
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #   restart: always


# volumes:
#   AltinnPlatformLocal:
